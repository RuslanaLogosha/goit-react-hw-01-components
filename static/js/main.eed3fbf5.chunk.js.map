{"version":3,"sources":["components/Profile/profile.module.css","components/Statistics/statistics.module.css","components/FriendList/friendListItem.module.css","components/FriendList/friendList.module.css","components/TransactionHistory/transactionHistory.module.css","components/Profile/profile.js","components/Statistics/statistics.js","components/FriendList/FriendListItem.js","components/FriendList/friendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","props","name","avatar","tag","location","stats","followers","views","likes","className","s","profile","description","src","alt","label","quantity","defaultProps","Statistics","title","statistics","statList","map","stat","item","style","backgroundColor","Math","random","toString","substring","toUpperCase","percentage","id","FriendListItem","isOnline","status","width","FriendList","friends","friendlist","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eed3fbf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__38jCY\",\"description\":\"profile_description__2llVQ\",\"avatar\":\"profile_avatar__1-o32\",\"name\":\"profile_name__RoiMb\",\"tag\":\"profile_tag__2xtJ8\",\"location\":\"profile_location__3Tcrp\",\"stats\":\"profile_stats__zCgYj\",\"label\":\"profile_label__1SzVc\",\"quantity\":\"profile_quantity__3iDb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__b0FAJ\",\"title\":\"statistics_title__lj0EP\",\"statList\":\"statistics_statList__10F_C\",\"item\":\"statistics_item__2Wjea\",\"label\":\"statistics_label__28BDY\",\"percentage\":\"statistics_percentage__orPn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friendListItem_item__qYYPK\",\"status\":\"friendListItem_status__2iJ-i\",\"true\":\"friendListItem_true__2tYik\",\"false\":\"friendListItem_false__n2ETL\",\"avatar\":\"friendListItem_avatar__20mUG\",\"name\":\"friendListItem_name__2v5ru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"friendList_friendlist__1Y9wt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transactionHistory_transactionHistory__o6498\"};","import PropTypes from 'prop-types';\nimport s from './profile.module.css';\n\nconst Profile = props => {\n  const {\n    name,\n    avatar,\n    tag,\n    location,\n    stats: { followers, views, likes },\n  } = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  avatar:\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './statistics.module.css';\n\nconst randomColor = () => {\n  return (\n    '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase()\n  );\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <li\n            className={s.item}\n            key={stat.id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './friendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={s.item}>\n      <span className={`${s.status} ${s[isOnline]}`}>{isOnline}</span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.oneOf([true, false]),\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './friendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendlist}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/profile';\nimport user from './components/Profile/user.json';\n\nimport Statistics from './components/Statistics/statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\n\nimport FriendList from './components/FriendList/friendList';\nimport friends from './components/FriendList/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}